 To Do

#Urgent Bug Fix

#Customer facing issues

#Urgent and important

Certified fixed
client-accepted workflow to celebrate a job well done with the people subscribed to the bug.
status-update workflow. Send out comments that haven't been seen via email. Neglected status / follow?
Report tech support issue (put in ticket table) - requires screenshot.
Report tech support request (request table?) - new thing does not require screenshot
Report marketing activity
Work Order - setup new things.

##Blocking
Mobile does not have comments, etc...
Ability to get to the bug I just field with a link immediately after filing it.
"X is viewing with you" sucks on mobile.
Tools don't work on mobile (not displayed)

#Non-blocking
change set owner
Add project
Add user
Bug report processGetRequest() needs to be refactored into classes so that we instantiate a class based on the user type and show the different types of navigation.

Permissions per-project and per-resource (for client use).
Fix jump-to-bug (search?)

Star important things
Search
Permalinks to comments.
Tag people.. Make more intuitive. Perhaps use a "to" box?

#Important, but not urgent
Add a "cc" field so we can purposefully ping a user.
Show which participants on the bug are subscribed (and give workers the ability to subscribe them)
Have project tools become fixed position on scroll (https://css-tricks.com/scroll-fix-content/)
New Project
Manage Project
New Worker
Manage Worker
Add Skillsets
Manage Skillsets
New User
Emails need to be logged in the email_log. All emails are sent to users, so later we may have to give non-usable accounts (Role = External (E)?) to those people so we can mail them without them having to register in the system.

#Important, non-blocking
Clear old tokens script
Emojis
http://stackoverflow.com/questions/7814293/how-to-insert-utf-8-mb4-characteremoji-in-ios5-in-mysql
Add a hook for when an email is sent

Nice to have / fun stuff.
Use timeago (http://timeago.yarp.com/) to auto-update timestamps on bugs.

#Major improvements
Allow for app dependencies so that one app can extend another. Currently, you cannot extend an app if the name of the app precedes the dependent app. For example, AdminDashboard cannot extend ManagerDashboard at the app level because admin dashboard is loaded befor Manager dashboard, which means the spl_autoloader for the manager app has not yet been queued. Therefore, when the Admin dashboard tries to find that class, it does not yet exist. The solution is to have dependencies in the manifest.xml file, which forces other apps to load first when the current app is dependent on those apps. 

Refactor injectCSS and injectJS (for footer and header) into the AntApp class. Safely read the css and js directories and add those files as necessary. It should also generate a signed hash list. Perhaps it should read the manifest file for those files, and build a list from that. Then we know that those files are "supposed to be there".

Add to Bugzy Core: the ability to use symlinks to "import" css and js from a central repo in the app. This has to be on a per-file basis so that we can put custom js files in there by themselves.

#done
Jump to top button
Fade out background for brew posts.
Paste from clipboard http://stackoverflow.com/questions/6333814/how-does-the-paste-image-from-clipboard-functionality-work-in-gmail-and-google-c/6338207#6338207
Changed alerts pop-up for empty post to toast.
https://codeseven.github.io/toastr/
Fix header image to use database settings.
Client bug manager CSS issues.
Fix CSS for desktop.
Show image attachments inline
Changed timestamps to relative times.
Worker bug manger
Assigning bugs for Workers and admins.
Admin bug manger
New bug queue process script.
Resource vault - add resources.
reply-and-assign.
What project is this in? (Raman)
Cannot acknowledge your own bug (even if a worker).
Show who is looking at that page with you.
"Friend is typing..." notif.
show updates without refreshing page.
What bugs are shown in the project manager? Adam can see private bugs? Bugs from other people?
send to QA
QA Workflow.
Subcribed to all comments.
On admin dashboard, change "Last login" to "last comment posted" in agoTime. Probably, we should sort by that.
Fixed / not fixed.
Include the most recent unread comments in the "assigned a bug" (be mindful of public / private comments!)
autoclose workflow
Who's online - javascript to check status of who is there and report who is there when looking at a bug.
Live "chat" updates - javascript to check the status of unread messages and add them.